#!/usr/bin/make -f

export DEB_HOST_GNU_TYPE ?= $(shell dpkg-architecture -qDEB_HOST_GNU_TYPE)

export CC := $(DEB_HOST_GNU_TYPE)-gcc
export SRCDIR := $(CURDIR)

M := $(CURDIR)/debian/makefiles

INSTALL := install
INSTALL_PROGRAM = $(INSTALL)

# Map Debian Host architectures to Android architectures
# used to include the architecture specific AndroidConfig.h
linux_arm := arm64 armel armhf
ifeq ($(DEB_HOST_ARCH),$(findstring $(DEB_HOST_ARCH), $(linux_arm)))
	export android_arch := linux-arm
endif
linux_mips := mips mipsel
ifeq ($(DEB_HOST_ARCH),$(findstring $(DEB_HOST_ARCH), $(linux_mips)))
	export android_arch := linux-mips
endif
linux_x86 := amd64 i386
ifeq ($(DEB_HOST_ARCH),$(findstring $(DEB_HOST_ARCH), $(linux_x86)))
	export android_arch := linux-x86
endif

%:
	dh $@ --with python2 --with bash-completion

override_dh_clean:
	dh_clean
	rm -rf builddir/

override_dh_auto_build:
	mkdir -p builddir/adb
	$(MAKE) -f $(M)/adb.mk -C builddir/adb
	mkdir -p builddir/fastboot
	$(MAKE) -f $(M)/fastboot.mk -C builddir/fastboot
	mkdir -p builddir/ext4_utils
	$(MAKE) -f $(M)/ext4_utils.mk -C builddir/ext4_utils
	mkdir -p builddir/mkbootimg
	$(MAKE) -f $(M)/mkbootimg.mk -C builddir/mkbootimg
ifeq (,$(filter $(DEB_HOST_ARCH),powerpc))
	mkdir -p builddir/adbd
	$(MAKE) -f $(M)/adbd.mk -C builddir/adbd
endif

override_dh_install:
	dh_install
	$(INSTALL_PROGRAM) system/core/libsparse/simg_dump.py debian/android-tools-fsutils/usr/bin/simg_dump
	$(INSTALL_PROGRAM) system/extras/ext4_utils/mkuserimg.sh debian/android-tools-fsutils/usr/bin/mkuserimg

override_dh_installudev:
	dh_installudev --priority=70
