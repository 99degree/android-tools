# adbd - run adb debugging shell
#
# This task enables the adb shell

description	"start adbd"

start on filesystem or runlevel [2345]

respawn

pre-start script
	[ ! -d /sys/class/android_usb ] && { stop; exit 0; }

	# retrieve the product info from Android
	manufacturer=$(getprop ro.product.manufacturer Android)
	model=$(getprop ro.product.model Android)
	serial=$(getprop ro.serialno 0123456789ABCDEF)

	echo 0 >/sys/class/android_usb/android0/enable

	echo 18d1 >/sys/class/android_usb/android0/idVendor
	echo d002 >/sys/class/android_usb/android0/idProduct

	echo adb >/sys/class/android_usb/android0/functions

	echo -n $manufacturer >/sys/class/android_usb/android0/iManufacturer
	echo -n $model >/sys/class/android_usb/android0/iProduct
	echo -n $serial >/sys/class/android_usb/android0/iSerial

	echo 1 >/sys/class/android_usb/android0/enable
end script

# ro.secure=0 allows running as root; alternatively you may set
# ro.debuggable=1 and service.adb.root=1
env APROP_ro_secure=0

# set persist.adb.trace_mask=0xfff (restart android-tools-adbd
# APROP_persist_adb_trace_mask=0xfff) to get a debug log under /data/adb/

exec /usr/sbin/adbd
